// <auto-generated />
using Football.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Football.Database.Migrations
{
    [DbContext(typeof(FootballContext))]
    [Migration("20230327062318_DataInitialization")]
    partial class DataInitialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Football.API.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'8', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RedCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("YellowCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Manager","public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alex",
                            RedCard = 1,
                            YellowCard = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Zidane",
                            RedCard = 0,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Guardiola",
                            RedCard = 0,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rafa",
                            RedCard = 0,
                            YellowCard = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Jose",
                            RedCard = 2,
                            YellowCard = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ancelotti",
                            RedCard = 1,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Diego",
                            RedCard = 0,
                            YellowCard = 0
                        });
                });

            modelBuilder.Entity("Football.API.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'3', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AwayManagerId")
                        .HasColumnType("integer");

                    b.Property<int>("HouseManagerId")
                        .HasColumnType("integer");

                    b.Property<int>("RefereeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AwayManagerId");

                    b.HasIndex("HouseManagerId");

                    b.HasIndex("RefereeId");

                    b.ToTable("Match","public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwayManagerId = 4,
                            HouseManagerId = 3,
                            RefereeId = 3
                        },
                        new
                        {
                            Id = 2,
                            AwayManagerId = 6,
                            HouseManagerId = 5,
                            RefereeId = 4
                        });
                });

            modelBuilder.Entity("Football.API.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'31', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("MinutesPlayed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RedCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("YellowCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Player","public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MinutesPlayed = 78,
                            Name = "Lionel",
                            RedCard = 1,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 2,
                            MinutesPlayed = 52,
                            Name = "Cristiano",
                            RedCard = 1,
                            YellowCard = 2
                        },
                        new
                        {
                            Id = 3,
                            MinutesPlayed = 23,
                            Name = "Iker",
                            RedCard = 2,
                            YellowCard = 3
                        },
                        new
                        {
                            Id = 4,
                            MinutesPlayed = 67,
                            Name = "Gerard",
                            RedCard = 0,
                            YellowCard = 4
                        },
                        new
                        {
                            Id = 5,
                            MinutesPlayed = 80,
                            Name = "Philippe",
                            RedCard = 0,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 6,
                            MinutesPlayed = 90,
                            Name = "Jordi",
                            RedCard = 2,
                            YellowCard = 0
                        },
                        new
                        {
                            Id = 7,
                            MinutesPlayed = 65,
                            Name = "Kylian",
                            RedCard = 3,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 8,
                            MinutesPlayed = 35,
                            Name = "Fran",
                            RedCard = 1,
                            YellowCard = 3
                        },
                        new
                        {
                            Id = 9,
                            MinutesPlayed = 48,
                            Name = "Geronimo",
                            RedCard = 0,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 10,
                            MinutesPlayed = 23,
                            Name = "Karim",
                            RedCard = 1,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 11,
                            MinutesPlayed = 76,
                            Name = "Sadio",
                            RedCard = 2,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 12,
                            MinutesPlayed = 77,
                            Name = "Fabinho",
                            RedCard = 3,
                            YellowCard = 3
                        },
                        new
                        {
                            Id = 13,
                            MinutesPlayed = 54,
                            Name = "Luka",
                            RedCard = 3,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 14,
                            MinutesPlayed = 68,
                            Name = "Rafael",
                            RedCard = 1,
                            YellowCard = 2
                        },
                        new
                        {
                            Id = 15,
                            MinutesPlayed = 89,
                            Name = "Bernardo",
                            RedCard = 1,
                            YellowCard = 3
                        },
                        new
                        {
                            Id = 16,
                            MinutesPlayed = 12,
                            Name = "Antonio",
                            RedCard = 2,
                            YellowCard = 4
                        },
                        new
                        {
                            Id = 17,
                            MinutesPlayed = 68,
                            Name = "Pedri",
                            RedCard = 0,
                            YellowCard = 5
                        },
                        new
                        {
                            Id = 18,
                            MinutesPlayed = 58,
                            Name = "Theo",
                            RedCard = 0,
                            YellowCard = 2
                        },
                        new
                        {
                            Id = 19,
                            MinutesPlayed = 36,
                            Name = "Cristiano",
                            RedCard = 1,
                            YellowCard = 4
                        },
                        new
                        {
                            Id = 20,
                            MinutesPlayed = 71,
                            Name = "Gavi",
                            RedCard = 3,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 21,
                            MinutesPlayed = 86,
                            Name = "Lautaro",
                            RedCard = 2,
                            YellowCard = 0
                        },
                        new
                        {
                            Id = 22,
                            MinutesPlayed = 82,
                            Name = "Joshua",
                            RedCard = 2,
                            YellowCard = 0
                        },
                        new
                        {
                            Id = 23,
                            MinutesPlayed = 90,
                            Name = "Eder",
                            RedCard = 1,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 24,
                            MinutesPlayed = 39,
                            Name = "Harry",
                            RedCard = 1,
                            YellowCard = 2
                        },
                        new
                        {
                            Id = 25,
                            MinutesPlayed = 57,
                            Name = "Thomas",
                            RedCard = 3,
                            YellowCard = 3
                        },
                        new
                        {
                            Id = 26,
                            MinutesPlayed = 51,
                            Name = "Rafael",
                            RedCard = 4,
                            YellowCard = 4
                        },
                        new
                        {
                            Id = 27,
                            MinutesPlayed = 12,
                            Name = "Raul",
                            RedCard = 0,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 28,
                            MinutesPlayed = 87,
                            Name = "Mason",
                            RedCard = 1,
                            YellowCard = 1
                        },
                        new
                        {
                            Id = 29,
                            MinutesPlayed = 64,
                            Name = "Andrew",
                            RedCard = 2,
                            YellowCard = 3
                        },
                        new
                        {
                            Id = 30,
                            MinutesPlayed = 56,
                            Name = "Recee",
                            RedCard = 2,
                            YellowCard = 2
                        });
                });

            modelBuilder.Entity("Football.API.Models.Referee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'5', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("MinutesPlayed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Referee","public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MinutesPlayed = 0,
                            Name = "Pierluigi"
                        },
                        new
                        {
                            Id = 2,
                            MinutesPlayed = 0,
                            Name = "Howard"
                        },
                        new
                        {
                            Id = 3,
                            MinutesPlayed = 0,
                            Name = "Mateu"
                        },
                        new
                        {
                            Id = 4,
                            MinutesPlayed = 0,
                            Name = "Luis"
                        });
                });

            modelBuilder.Entity("Football.Database.Models.AwayPlayer", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer");

                    b.HasKey("PlayerId", "MatchId");

                    b.HasIndex("MatchId");

                    b.ToTable("AwayPlayer","public");

                    b.HasData(
                        new
                        {
                            PlayerId = 7,
                            MatchId = 1
                        },
                        new
                        {
                            PlayerId = 8,
                            MatchId = 1
                        },
                        new
                        {
                            PlayerId = 9,
                            MatchId = 1
                        },
                        new
                        {
                            PlayerId = 10,
                            MatchId = 1
                        },
                        new
                        {
                            PlayerId = 11,
                            MatchId = 1
                        },
                        new
                        {
                            PlayerId = 12,
                            MatchId = 2
                        },
                        new
                        {
                            PlayerId = 13,
                            MatchId = 2
                        },
                        new
                        {
                            PlayerId = 14,
                            MatchId = 2
                        },
                        new
                        {
                            PlayerId = 15,
                            MatchId = 2
                        });
                });

            modelBuilder.Entity("Football.Database.Models.HousePlayer", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer");

                    b.HasKey("PlayerId", "MatchId");

                    b.HasIndex("MatchId");

                    b.ToTable("HousePlayer","public");

                    b.HasData(
                        new
                        {
                            PlayerId = 16,
                            MatchId = 1
                        },
                        new
                        {
                            PlayerId = 17,
                            MatchId = 1
                        },
                        new
                        {
                            PlayerId = 18,
                            MatchId = 1
                        },
                        new
                        {
                            PlayerId = 19,
                            MatchId = 1
                        },
                        new
                        {
                            PlayerId = 20,
                            MatchId = 1
                        },
                        new
                        {
                            PlayerId = 21,
                            MatchId = 2
                        },
                        new
                        {
                            PlayerId = 22,
                            MatchId = 2
                        },
                        new
                        {
                            PlayerId = 24,
                            MatchId = 2
                        },
                        new
                        {
                            PlayerId = 25,
                            MatchId = 2
                        });
                });

            modelBuilder.Entity("Football.API.Models.Match", b =>
                {
                    b.HasOne("Football.API.Models.Manager", "AwayManager")
                        .WithMany()
                        .HasForeignKey("AwayManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football.API.Models.Manager", "HouseManager")
                        .WithMany()
                        .HasForeignKey("HouseManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football.API.Models.Referee", "Referee")
                        .WithMany()
                        .HasForeignKey("RefereeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Football.Database.Models.AwayPlayer", b =>
                {
                    b.HasOne("Football.API.Models.Match", "Match")
                        .WithMany("AwayPlayers")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football.API.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Football.Database.Models.HousePlayer", b =>
                {
                    b.HasOne("Football.API.Models.Match", "Match")
                        .WithMany("HousePlayers")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football.API.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
